document.addEventListener("DOMContentLoaded",async()=>{try{let e=await fetch("http://localhost:3000/api/movies/popular");if(!e.ok)throw Error(`Network issue, ${e.status}`);data=await e.json(),console.log(data),t(data.results)}catch(t){console.log("Fetch Error",t)}document.getElementById("searchMovie").addEventListener("click",async()=>{try{let t=document.getElementById("searchInput").value.toLowerCase();await a(t)}catch(t){console.error("An Error Occured",t.message)}})});const t=t=>{let a=document.getElementById("movies-container");a.innerHTML="",a.classList.add("grid","grid-cols-1","sm:grid-cols-2","md:grid-cols-3","lg:grid-cols-4","gap-x-4","gap-y-4","px-2","py-10","mx-auto","mt-8","mb-8","md:ml-10","md:mr-10","justify-items-center","items-center"),t.forEach(t=>{console.log(t);let e=t.title,o=t.poster_path,r=t.overview,d=t.id,s=t.release_date,l=document.createElement("div");l.classList.add("max-w-md","rounded-lg","shadow-lg","m-2","h-auto","w-full"),l.innerHTML=`
    <img src= "https://image.tmdb.org/t/p/w500${o}" alt="${e}" class="w-full h-auto object-cover">
    <div class="px-6 py-4 h-auto w-full">
     <div class="font-bold text-xl mb-2 truncate">${e}</div>
    <p class="text-gray-700 text-base truncate">${r}</p>
    <div class="font-bold text-l mb-2">Releasing on: ${s}</div>
    <button class="add-to-cart bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600"  data-poster-path="https://image.tmdb.org/t/p/w500/${o}" data-id="${d}" data-title="${e}">Add to Favorite</button>
    </div>
   `,a.appendChild(l)}),document.querySelectorAll(".add-to-cart").forEach(t=>{t.addEventListener("click",e)})},e=t=>{let e=t.target,a=e.getAttribute("data-id"),r=e.getAttribute("data-title"),d=e.getAttribute("data-poster-path")||"placeholder-image-url",s=JSON.parse(localStorage.getItem("cart"))||[];if(s.some(t=>t.id===a)){o(`${r} is already in your Favorite!`);return}s.push({id:a,poster_path:d,title:r}),localStorage.setItem("cart",JSON.stringify(s)),o(`${r} has been added to your Favorite!`)};async function a(e){try{let a=data.results.filter(t=>t.title.toLowerCase().includes(e));a.length>0?t(a):document.getElementById("Not-Found-Movie").innerHTML=" No movies found matching your search."}catch(t){console.error("Error during search:",t.message)}}const o=t=>{let e=document.getElementById("notification");e.textContent=t,e.classList.remove("hidden"),setTimeout(()=>{e.classList.add("hidden")},4e3)};
//# sourceMappingURL=index.0d9c62ae.js.map
