{"mappings":"AAAA,aAAa;AAEb,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C;AACF;AAEA,MAAM,mBAAmB;IACvB,MAAM,qBAAqB,SAAS,cAAc,CAAC;IACnD,mBAAmB,SAAS,GAAG;IAE/B,IAAI,YAAY,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,YAAY,EAAE;IAE9D,mBAAmB,SAAS,CAAC,GAAG,CAC9B,QACA,eACA,kBACA,kBACA,kBACA,WACA,WACA,QACA,SACA,WACA,QACA,QACA,YACA,YACA,wBACA;IAGF,UAAU,OAAO,CAAC,CAAC;QACjB,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,KAAK,SAAS,CAAC,GAAG,CAChB,YACA,cACA,aACA,OACA,UACA;QAEF,KAAK,SAAS,GAAG,CAAC;kBACJ,EAAE,MAAM,WAAW,CAAC,OAAO,EACvC,MAAM,KAAK,CACZ;;uDAEkD,EAAE,MAAM,KAAK,CAAC;;gEAEL,EAAE,MAAM,EAAE,CAAC,EAAE,EACvE,MAAM,KAAK,IAAI,kBAChB;mCAC8B,EACvB,MAAM,EAAE,CACT;6GACkG,EACjG,MAAM,EAAE,CACT;;MAEL,CAAC;QACH,mBAAmB,WAAW,CAAC;IACjC;IAEA,+CAA+C;IAC/C,MAAM,kBAAkB,SAAS,gBAAgB,CAAC;IAClD,gBAAgB,OAAO,CAAC,CAAC;QACvB,OAAO,gBAAgB,CAAC,SAAS;IACnC;AACF;AAEA,MAAM,WAAW,CAAC;IAChB,MAAM,SAAS,MAAM,MAAM;IAC3B,MAAM,UAAU,OAAO,YAAY,CAAC;IACpC,MAAM,YAAY,SAAS,cAAc,CAAC,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE,KAAK;IAExE,uCAAuC;IACvC,IAAI,YAAY,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,YAAY,EAAE;IAE9D,kCAAkC;IAClC,YAAY,UAAU,GAAG,CAAC,CAAC;QACzB,IAAI,MAAM,EAAE,KAAK,SACf,OAAO;YAAE,GAAG,KAAK;YAAE,OAAO;QAAU;QAEtC,OAAO;IACT;IAEA,kDAAkD;IAClD,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAE5C,4BAA4B;IAC5B,SAAS,cAAc,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,SAAS,GACnD,aAAa;IAEf,2CAA2C;IAC3C,SAAS,cAAc,CAAC,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAE,KAAK,GAAG;IAEzD,mCAAmC;IACnC,MAAM,mBAAmB,SAAS,aAAa,CAAC;IAChD,iBAAiB,SAAS,CAAC,GAAG,CAC5B,SACA,eACA,aACA,WACA,SACA,aACA,gBACA,cACA,QACA,QACA,WACA,aACA;IAEF,iBAAiB,SAAS,GAAG;IAE7B,mEAAmE;IACnE,SAAS,IAAI,CAAC,WAAW,CAAC;IAE1B,yCAAyC;IACzC,WAAW;QACT,iBAAiB,MAAM;IACzB,GAAG;AACL","sources":["src/journal.js"],"sourcesContent":["// journal.js\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  displayFavorites();\r\n});\r\n\r\nconst displayFavorites = () => {\r\n  const favoritesContainer = document.getElementById(\"favorites-container\");\r\n  favoritesContainer.innerHTML = \"\";\r\n\r\n  let favorites = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n\r\n  favoritesContainer.classList.add(\r\n    \"grid\",\r\n    \"grid-cols-1\",\r\n    \"sm:grid-cols-2\",\r\n    \"md:grid-cols-3\",\r\n    \"lg:grid-cols-4\",\r\n    \"gap-x-4\",\r\n    \"gap-y-4\",\r\n    \"px-2\",\r\n    \"py-10\",\r\n    \"mx-auto\",\r\n    \"mt-8\",\r\n    \"mb-8\",\r\n    \"md:ml-10\",\r\n    \"md:mr-10\",\r\n    \"justify-items-center\",\r\n    \"items-center\"\r\n  );\r\n\r\n  favorites.forEach((movie) => {\r\n    const card = document.createElement(\"div\");\r\n    card.classList.add(\r\n      \"max-w-md\",\r\n      \"rounded-lg\",\r\n      \"shadow-lg\",\r\n      \"m-2\",\r\n      \"h-auto\",\r\n      \"w-full\"\r\n    );\r\n    card.innerHTML = `\r\n        <img src=\"${movie.poster_path}\" alt=\"${\r\n      movie.title\r\n    }\" class=\"w-full h-auto object-cover\">\r\n        <div class=\"px-6 py-4 h-auto w-full\">\r\n          <div class=\"font-bold text-xl mb-2 truncate\">${movie.title}</div>\r\n          <div class=\"font-medium text-m mb-2\">Personal Notes:</div>\r\n          <p class=\"text-gray-700 text-base truncate\" id=\"notes-${movie.id}\">${\r\n      movie.notes || \"No notes added.\"\r\n    }</p>\r\n          <textarea id=\"note-input-${\r\n            movie.id\r\n          }\" class=\"mt-2 p-2 border rounded w-full\" placeholder=\"Add your personal note here\"></textarea>\r\n          <button class=\"save-note bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 mt-2\" data-id=\"${\r\n            movie.id\r\n          }\">Save Note</button>\r\n        </div>\r\n      `;\r\n    favoritesContainer.appendChild(card);\r\n  });\r\n\r\n  // Add event listeners to the save note buttons\r\n  const saveNoteButtons = document.querySelectorAll(\".save-note\");\r\n  saveNoteButtons.forEach((button) => {\r\n    button.addEventListener(\"click\", saveNote);\r\n  });\r\n};\r\n\r\nconst saveNote = (event) => {\r\n  const button = event.target;\r\n  const movieId = button.getAttribute(\"data-id\");\r\n  const noteInput = document.getElementById(`note-input-${movieId}`).value;\r\n\r\n  // Retrieve favorites from localStorage\r\n  let favorites = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n\r\n  // Find the movie and add the note\r\n  favorites = favorites.map((movie) => {\r\n    if (movie.id === movieId) {\r\n      return { ...movie, notes: noteInput };\r\n    }\r\n    return movie;\r\n  });\r\n\r\n  // Save the updated favorites back to localStorage\r\n  localStorage.setItem(\"cart\", JSON.stringify(favorites));\r\n\r\n  // Update the displayed note\r\n  document.getElementById(`notes-${movieId}`).innerText =\r\n    noteInput || \"No notes added.\";\r\n\r\n  // Clear the textarea after saving the note\r\n  document.getElementById(`note-input-${movieId}`).value = \"\";\r\n\r\n  // Create a success message element\r\n  const messageContainer = document.createElement(\"div\");\r\n  messageContainer.classList.add(\r\n    \"fixed\",\r\n    \"bottom-auto\",\r\n    \"left-auto\",\r\n    \"right-5\",\r\n    \"top-5\",\r\n    \"transform\",\r\n    \"bg-green-500\",\r\n    \"text-white\",\r\n    \"py-2\",\r\n    \"px-4\",\r\n    \"rounded\",\r\n    \"shadow-lg\",\r\n    \"z-50\"\r\n  );\r\n  messageContainer.innerText = \"Your note has been saved!\";\r\n\r\n  // Append the message container to the body or a specific container\r\n  document.body.appendChild(messageContainer);\r\n\r\n  // Remove the message after a few seconds\r\n  setTimeout(() => {\r\n    messageContainer.remove();\r\n  }, 3000);\r\n};\r\n"],"names":[],"version":3,"file":"journal.dcc4f2ae.js.map","sourceRoot":"/__parcel_source_root/"}