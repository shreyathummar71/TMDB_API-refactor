{"mappings":"ACCA,SAAS,gBAAgB,CAAC,mBAAoB,UAG5C,GAAI,CACF,IAAM,EAAW,MAAM,MAHV,4CAIb,GAAI,CAAC,EAAS,EAAE,CACd,MAAM,AAAI,MAAM,CAAC,eAAe,EAAE,EAAS,MAAM,CAAC,CAAC,EAErD,KAAO,MAAM,EAAS,IAAI,GAC1B,QAAQ,GAAG,CAAC,MACZ,EAAU,KAAK,OAAO,CACxB,CAAE,MAAO,EAAO,CACd,QAAQ,GAAG,CAAC,cAAe,EAC7B,CACA,SAAS,cAAc,CAAC,eAAe,gBAAgB,CAAC,QAAS,KAI/D,EAHmB,SAChB,cAAc,CAAC,eACf,KAAK,CAAC,WAAW,GAEtB,EACF,GACA,MAAM,EAAY,AAAC,IACjB,IAAM,EAAkB,SAAS,cAAc,CAAC,mBAChD,CAAA,EAAgB,SAAS,CAAG,GAC5B,EAAgB,SAAS,CAAC,GAAG,CAC3B,OACA,cACA,iBACA,iBACA,iBACA,UACA,UACA,OACA,QACA,UACA,OACA,OACA,WACA,WACA,uBACA,gBAEF,EAAO,OAAO,CAAC,AAAC,IACd,QAAQ,GAAG,CAAC,GACZ,IAAM,EAAQ,EAAM,KAAK,CACnB,EAAY,EAAM,WAAW,CAC7B,EAAW,EAAM,QAAQ,CACzB,EAAW,EAAM,EAAE,CACnB,EAAc,EAAM,YAAY,CAChC,EAAO,SAAS,aAAa,CAAC,OACpC,EAAK,SAAS,CAAC,GAAG,CAChB,WACA,aACA,YACA,MACA,SACA,UAEF,EAAK,SAAS,CAAG;gDAC8B,WAAqB;;oDAEpB;kDACF;uDACK;gJACyF,eAAuB,kBAAyB;;IAE5L,CACA,EAAgB,WAAW,CAAC,EAC9B,GAGA,AADgB,SAAS,gBAAgB,CAAC,gBAClC,OAAO,CAAC,AAAC,IACf,EAAO,gBAAgB,CAAC,QAAS,EACnC,EACF,EACM,EAAY,AAAC,IACjB,IAAM,EAAS,EAAM,MAAM,CACrB,EAAU,EAAO,YAAY,CAAC,WAC9B,EAAa,EAAO,YAAY,CAAC,cACjC,EACJ,EAAO,YAAY,CAAC,qBAAuB,wBAGzC,EAAO,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,UAAY,EAAE,CAGzD,GAAI,EAAK,IAAI,CAAC,AAAC,GAAU,EAAM,EAAE,GAAK,GAAU,CAC9C,EAAiB,CAAC,EAAE,EAAW,6BAA6B,CAAC,EAC7D,MACF,CAGA,EAAK,IAAI,CAAC,CAAE,GAAI,EAAS,YAAa,EAAY,MAAO,CAAW,GAGpE,aAAa,OAAO,CAAC,OAAQ,KAAK,SAAS,CAAC,IAG5C,EAAiB,CAAC,EAAE,EAAW,iCAAiC,CAAC,CACnE,EACM,EAAa,AAAC,IAClB,IAAM,EAAiB,KAAK,OAAO,CAAC,MAAM,CAAC,AAAC,GAC1C,EAAM,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,GAGjC,CAAA,EAAe,MAAM,CAAG,EAC1B,EAAU,GAEV,MAAM,wCAEV,EACM,EAAmB,AAAC,IACxB,IAAM,EAAe,SAAS,cAAc,CAAC,eAC7C,CAAA,EAAa,WAAW,CAAG,EAC3B,EAAa,SAAS,CAAC,MAAM,CAAC,UAC9B,WAAW,KACT,EAAa,SAAS,CAAC,GAAG,CAAC,SAC7B,EAAG,IACL","sources":["<anon>","src/main.js"],"sourcesContent":["//On pageload calls the fetch\ndocument.addEventListener(\"DOMContentLoaded\", async ()=>{\n    const apiUrl = \"http://localhost:3000/api/movies/popular\";\n    //Fetching Movies data\n    try {\n        const response = await fetch(apiUrl);\n        if (!response.ok) throw new Error(`Network issue, ${response.status}`);\n        data = await response.json();\n        console.log(data);\n        fetchData(data.results);\n    } catch (error) {\n        console.log(\"Fetch Error\", error);\n    }\n    document.getElementById(\"searchMovie\").addEventListener(\"click\", ()=>{\n        const searchTerm = document.getElementById(\"searchInput\").value.toLowerCase();\n        searchData(searchTerm);\n    });\n});\nconst fetchData = (movies)=>{\n    const moviesContainer = document.getElementById(\"movies-container\");\n    moviesContainer.innerHTML = \"\";\n    moviesContainer.classList.add(\"grid\", \"grid-cols-1\", \"sm:grid-cols-2\", \"md:grid-cols-3\", \"lg:grid-cols-4\", \"gap-x-4\", \"gap-y-4\", \"px-2\", \"py-10\", \"mx-auto\", \"mt-8\", \"mb-8\", \"md:ml-10\", \"md:mr-10\", \"justify-items-center\", \"items-center\");\n    movies.forEach((movie)=>{\n        console.log(movie);\n        const title = movie.title;\n        const thumbNail = movie.poster_path;\n        const overview = movie.overview;\n        const uniqueId = movie.id;\n        const releaseDate = movie.release_date;\n        const card = document.createElement(\"div\");\n        card.classList.add(\"max-w-md\", \"rounded-lg\", \"shadow-lg\", \"m-2\", \"h-auto\", \"w-full\");\n        card.innerHTML = `\r\n    <img src= \"${`https://image.tmdb.org/t/p/w500${thumbNail}`}\" alt=\"${title}\" class=\"w-full h-auto object-cover\">\r\n    <div class=\"px-6 py-4 h-auto w-full\">\r\n     <div class=\"font-bold text-xl mb-2 truncate\">${title}</div>\r\n    <p class=\"text-gray-700 text-base truncate\">${overview}</p>\r\n    <div class=\"font-bold text-l mb-2\">Releasing on: ${releaseDate}</div>\r\n    <button class=\"add-to-cart bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\"  data-poster-path=\"https://image.tmdb.org/t/p/w500/${thumbNail}\" data-id=\"${uniqueId}\" data-title=\"${title}\">Add to Favorite</button>\r\n    </div>\r\n   `;\n        moviesContainer.appendChild(card);\n    });\n    // Add event listeners to the buttons\n    const buttons = document.querySelectorAll(\".add-to-cart\");\n    buttons.forEach((button)=>{\n        button.addEventListener(\"click\", addToCart);\n    });\n};\nconst addToCart = (event)=>{\n    const button = event.target;\n    const movieId = button.getAttribute(\"data-id\");\n    const movieTitle = button.getAttribute(\"data-title\");\n    const posterPath = button.getAttribute(\"data-poster-path\") || \"placeholder-image-url\";\n    // Retrieve cart from localStorage or initialize an empty array\n    let cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n    // Check if the movie is already in the cart based on its ID\n    if (cart.some((movie)=>movie.id === movieId)) {\n        showNotification(`${movieTitle} is already in your Favorite!`);\n        return;\n    }\n    // Add the movie to the cart\n    cart.push({\n        id: movieId,\n        poster_path: posterPath,\n        title: movieTitle\n    });\n    // Save the updated cart back to localStorage\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    // Display a success message\n    showNotification(`${movieTitle} has been added to your Favorite!`);\n};\nconst searchData = (searchTerm)=>{\n    const filteredMovies = data.results.filter((movie)=>movie.title.toLowerCase().includes(searchTerm));\n    if (filteredMovies.length > 0) fetchData(filteredMovies);\n    else alert(\"No movies found matching your search.\");\n};\nconst showNotification = (message)=>{\n    const notification = document.getElementById(\"notification\");\n    notification.textContent = message;\n    notification.classList.remove(\"hidden\");\n    setTimeout(()=>{\n        notification.classList.add(\"hidden\");\n    }, 4000);\n};\n\n//# sourceMappingURL=index.792feba9.js.map\n","//On pageload calls the fetch\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n  const apiUrl = \"http://localhost:3000/api/movies/popular\";\r\n  //Fetching Movies data\r\n  try {\r\n    const response = await fetch(apiUrl);\r\n    if (!response.ok) {\r\n      throw new Error(`Network issue, ${response.status}`);\r\n    }\r\n    data = await response.json();\r\n    console.log(data);\r\n    fetchData(data.results);\r\n  } catch (error) {\r\n    console.log(\"Fetch Error\", error);\r\n  }\r\n  document.getElementById(\"searchMovie\").addEventListener(\"click\", () => {\r\n    const searchTerm = document\r\n      .getElementById(\"searchInput\")\r\n      .value.toLowerCase();\r\n    searchData(searchTerm);\r\n  });\r\n});\r\nconst fetchData = (movies) => {\r\n  const moviesContainer = document.getElementById(\"movies-container\");\r\n  moviesContainer.innerHTML = \"\";\r\n  moviesContainer.classList.add(\r\n    \"grid\",\r\n    \"grid-cols-1\",\r\n    \"sm:grid-cols-2\",\r\n    \"md:grid-cols-3\",\r\n    \"lg:grid-cols-4\",\r\n    \"gap-x-4\",\r\n    \"gap-y-4\",\r\n    \"px-2\",\r\n    \"py-10\",\r\n    \"mx-auto\",\r\n    \"mt-8\",\r\n    \"mb-8\",\r\n    \"md:ml-10\",\r\n    \"md:mr-10\",\r\n    \"justify-items-center\",\r\n    \"items-center\"\r\n  );\r\n  movies.forEach((movie) => {\r\n    console.log(movie);\r\n    const title = movie.title;\r\n    const thumbNail = movie.poster_path;\r\n    const overview = movie.overview;\r\n    const uniqueId = movie.id;\r\n    const releaseDate = movie.release_date;\r\n    const card = document.createElement(\"div\");\r\n    card.classList.add(\r\n      \"max-w-md\",\r\n      \"rounded-lg\",\r\n      \"shadow-lg\",\r\n      \"m-2\",\r\n      \"h-auto\",\r\n      \"w-full\"\r\n    );\r\n    card.innerHTML = `\r\n    <img src= \"${`https://image.tmdb.org/t/p/w500${thumbNail}`}\" alt=\"${title}\" class=\"w-full h-auto object-cover\">\r\n    <div class=\"px-6 py-4 h-auto w-full\">\r\n     <div class=\"font-bold text-xl mb-2 truncate\">${title}</div>\r\n    <p class=\"text-gray-700 text-base truncate\">${overview}</p>\r\n    <div class=\"font-bold text-l mb-2\">Releasing on: ${releaseDate}</div>\r\n    <button class=\"add-to-cart bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\"  data-poster-path=\"https://image.tmdb.org/t/p/w500/${thumbNail}\" data-id=\"${uniqueId}\" data-title=\"${title}\">Add to Favorite</button>\r\n    </div>\r\n   `;\r\n    moviesContainer.appendChild(card);\r\n  });\r\n  // Add event listeners to the buttons\r\n  const buttons = document.querySelectorAll(\".add-to-cart\");\r\n  buttons.forEach((button) => {\r\n    button.addEventListener(\"click\", addToCart);\r\n  });\r\n};\r\nconst addToCart = (event) => {\r\n  const button = event.target;\r\n  const movieId = button.getAttribute(\"data-id\");\r\n  const movieTitle = button.getAttribute(\"data-title\");\r\n  const posterPath =\r\n    button.getAttribute(\"data-poster-path\") || \"placeholder-image-url\";\r\n\r\n  // Retrieve cart from localStorage or initialize an empty array\r\n  let cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n\r\n  // Check if the movie is already in the cart based on its ID\r\n  if (cart.some((movie) => movie.id === movieId)) {\r\n    showNotification(`${movieTitle} is already in your Favorite!`);\r\n    return;\r\n  }\r\n\r\n  // Add the movie to the cart\r\n  cart.push({ id: movieId, poster_path: posterPath, title: movieTitle });\r\n\r\n  // Save the updated cart back to localStorage\r\n  localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n\r\n  // Display a success message\r\n  showNotification(`${movieTitle} has been added to your Favorite!`);\r\n};\r\nconst searchData = (searchTerm) => {\r\n  const filteredMovies = data.results.filter((movie) =>\r\n    movie.title.toLowerCase().includes(searchTerm)\r\n  );\r\n\r\n  if (filteredMovies.length > 0) {\r\n    fetchData(filteredMovies);\r\n  } else {\r\n    alert(\"No movies found matching your search.\");\r\n  }\r\n};\r\nconst showNotification = (message) => {\r\n  const notification = document.getElementById(\"notification\");\r\n  notification.textContent = message;\r\n  notification.classList.remove(\"hidden\");\r\n  setTimeout(() => {\r\n    notification.classList.add(\"hidden\");\r\n  }, 4000);\r\n};\r\n"],"names":["document","addEventListener","response","fetch","ok","Error","status","data","json","console","log","fetchData","results","error","getElementById","searchData","value","toLowerCase","movies","moviesContainer","innerHTML","classList","add","forEach","movie","title","thumbNail","poster_path","overview","uniqueId","id","releaseDate","release_date","card","createElement","appendChild","buttons","querySelectorAll","button","addToCart","event","target","movieId","getAttribute","movieTitle","posterPath","cart","JSON","parse","localStorage","getItem","some","showNotification","push","setItem","stringify","searchTerm","filteredMovies","filter","includes","length","alert","message","notification","textContent","remove","setTimeout"],"version":3,"file":"index.792feba9.js.map"}